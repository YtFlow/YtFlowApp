# Universal Windows Platform

# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- next
- next-ci

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'YtFlowApp.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  keyFile: 'YtFlowApp_TemporaryKey.pfx'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  cleanBuild: false

steps:
- checkout: self
  submodules: recursive

- task: NuGetToolInstaller@1

- task: Cache@2
  condition: not('$(cleanBuild)')
  inputs:
    key: 'nuget | "$(Agent.OS)" | **/*.csproj | **/*.vcxproj'
    restoreKeys: |
      nuget | "$(Agent.OS)“ | **/*.csproj | **/*.vcxproj
      nuget
    path: $(NUGET_PACKAGES)
  displayName: Cache NuGet packages

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: Cache@2
  condition: not('$(cleanBuild)')
  inputs:
    key: 'cargo | "$(Agent.OS)" | YtFlowCore/Cargo.lock | YtFlowCore/rust-toolchain.toml | YtFlowCore/.cargo/publish.config.toml'
    restoreKeys: |
      nuget | "$(Agent.OS)“ | **/*.csproj | **/*.vcxproj
      nuget
    path: YtFlowCore/target
  displayName: Cache YtFlowCore target directory

- task: CmdLine@2
  inputs:
    workingDirectory: YtFlowCore
    script: |
      cargo build -p ytflow-uwp-plugin -Z build-std=std,panic_abort --target x86_64-uwp-windows-msvc --release
      cargo build -p ytflow-uwp-plugin -Z build-std=std,panic_abort --target thumbv7a-uwp-windows-msvc --release
  displayName: Build YtFlowCore for UWP

- task: DownloadSecureFile@1
  name: secureKeyFile
  inputs:
    secureFile: '$(keyFile)'
    retryCount: '2'

- task: VSBuild@1
  displayName: Build x64
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="x64" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Never /p:PackageCertificateKeyFile="$(secureKeyFile.secureFilePath)" /p:PackageCertificateThumbprint="" /p:UapAppxPackageBuildMode=SideloadOnly /p:PlatformToolset=v143'

- task: VSBuild@1
  displayName: Build ARM
  inputs:
    platform: 'ARM'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/restore /p:AppxBundlePlatforms="ARM" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Never /p:PackageCertificateKeyFile="$(secureKeyFile.secureFilePath)" /p:PackageCertificateThumbprint="" /p:UapAppxPackageBuildMode=SideloadOnly /p:PlatformToolset=v143'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(build.artifactStagingDirectory)\AppxPackages\'
    artifact: 'AppxPackages'
    publishLocation: 'pipeline'